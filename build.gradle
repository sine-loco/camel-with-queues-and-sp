import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {url 'https://plugins.gradle.org/m2/'}
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}" )
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'project-report'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ru.snm.misc.camel'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenLocal()
    mavenCentral()
}

allprojects {
    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES

            mavenBom 'org.springframework:spring-framework-bom:5.1.0.RELEASE'

        }
    }

}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-actuator',

            'org.apache.camel:camel-spring-boot-starter:2.22.1',

            // ---------- JAXB
            /* 'com.sun.xml.bind:jaxb-core' and 'com.sun.xml.bind:jaxb-impl' 
             * are already onboard */
            // to avoid 'java.lang.ClassNotFoundException: javax.xml.bind.JAXBContext'
            'javax.xml.bind:jaxb-api:2.3.0',
            // to avoid 'java.lang.ClassNotFoundException: javax.activation.DataHandler'
            // 'javax.activation:activation:1.1.1', there's a newer one:
            'com.sun.activation:javax.activation:1.2.0'
    )

    runtimeOnly( 'org.postgresql:postgresql' )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',

            'ru.yandex.qatools.embed:postgresql-embedded:2.9',
    )
}


wrapper {
    gradleVersion = '4.10.2'
}